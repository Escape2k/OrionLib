//------------------------------------------------------------------------------
//
//                   Generated by VCL C++/C#.NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2011
//                              www.mitov.com
//
//------------------------------------------------------------------------------

#ifndef CLPControlCode_H_
#define CLPControlCode_H_

#pragma optimize( "", off )
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( CLPClassProperty *a_property, CTLPOptionalPenProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( CLPClassProperty *a_property, CTLPOptionalPenProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalPenProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPOptionalPenProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( CLPBaseComponent *a_control, CTLPOptionalPenProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( CLPBaseComponent *a_control, CTLPOptionalPenProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalPenProperty ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::CTLPOptionalPenProperty( const CTLPOptionalPenProperty &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Pen( *new CTPen( GetInstance(), _T( "Pen" )))
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty::~CTLPOptionalPenProperty()
{
  delete &Pen;
}
//------------------------------------------------------------------------------
inline CTLPOptionalPenProperty & CTLPOptionalPenProperty::operator = ( const CTLPOptionalPenProperty & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPOptionalPenProperty::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( CLPClassProperty *a_property, CTSLBasicOptionalLabel ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( CLPClassProperty *a_property, CTSLBasicOptionalLabel ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLBasicOptionalLabel ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLBasicOptionalLabel ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( CLPBaseComponent *a_control, CTSLBasicOptionalLabel ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( CLPBaseComponent *a_control, CTSLBasicOptionalLabel ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLBasicOptionalLabel ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::CTSLBasicOptionalLabel( const CTSLBasicOptionalLabel &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Font( *new CTFont( GetInstance(), _T( "Font" ))),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel::~CTSLBasicOptionalLabel()
{
  delete &Font;
}
//------------------------------------------------------------------------------
inline CTSLBasicOptionalLabel & CTSLBasicOptionalLabel::operator = ( const CTSLBasicOptionalLabel & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLBasicOptionalLabel::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( CLPClassProperty *a_property, CTSLOptionalLabel ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( CLPClassProperty *a_property, CTSLOptionalLabel ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLOptionalLabel ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTSLOptionalLabel ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( CLPBaseComponent *a_control, CTSLOptionalLabel ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( CLPBaseComponent *a_control, CTSLOptionalLabel ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTSLOptionalLabel ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel::CTSLOptionalLabel( const CTSLOptionalLabel &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Text( GetInstance(), _T( "Text" ) )
{
}
//------------------------------------------------------------------------------
inline CTSLOptionalLabel & CTSLOptionalLabel::operator = ( const CTSLOptionalLabel & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTSLOptionalLabel::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPCustomControl::CTLPCustomControl() :
  Visible( GetInstance(), _T( "Visible" ) ),
  OnMouseEnter( GetInstance(), _T( "OnMouseEnter" ) ),
  OnMouseLeave( GetInstance(), _T( "OnMouseLeave" ) )
{
}
//------------------------------------------------------------------------------
inline void CTLPCustomControl::Open( HWND hParent )
{
  inherited::Open( hParent );

  LibraryHandle = ::Get_SignalLabBasicPkgRAD();
}
//------------------------------------------------------------------------------
inline void CTLPCustomControl::Open( CLPControl &hParent )
{
  inherited::Open( hParent );

  LibraryHandle = ::Get_SignalLabBasicPkgRAD();
}
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTLPCustomControl::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline void CTLPCustomControl::InvalidateIntRect( RECT ARect )
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Lpcontrol@TLPCustomControl@InvalidateIntRect$qqrrx11Types@TRect" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    RECT __1_Param1 = ARect;

    _asm
      {
      push eax
      push edx
      lea  edx,__1_Param1
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  edx
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#pragma optimize( "", on )
#endif   // CLPControlCode_H_
//------------------------------------------------------------------------------
