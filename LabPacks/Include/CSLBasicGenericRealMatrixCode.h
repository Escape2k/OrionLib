//------------------------------------------------------------------------------
//
//                   Generated by VCL C++/C#.NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2011
//                              www.mitov.com
//
//------------------------------------------------------------------------------

#ifndef CSLBasicGenericRealMatrixCode_H_
#define CSLBasicGenericRealMatrixCode_H_

#pragma optimize( "", off )
//------------------------------------------------------------------------------
inline CTSLCommonRealMatrixFilter::CTSLCommonRealMatrixFilter() :
  OutputPin( GetInstance(), _T( "OutputPin" ) ),
  InputPin( GetInstance(), _T( "InputPin" ) )
{
  LibraryHandle = Get_SignalLabBasicPkgRAD();
}
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTSLCommonRealMatrixFilter::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline CTSLBasicGenericRealMatrix::CTSLBasicGenericRealMatrix() :
  OnStart( GetInstance(), _T( "OnStart" ) ),
  OnStop( GetInstance(), _T( "OnStop" ) ),
  SynchronizeType( GetInstance(), _T( "SynchronizeType" ) )
{
  LibraryHandle = Get_SignalLabBasicPkgRAD();
}
//------------------------------------------------------------------------------
inline TLPFunctionEntry CTSLBasicGenericRealMatrix::GetFunction( const char *function_name )
{
  TLPFunctionEntry Result = VCL_GetFunction( LibraryHandle, function_name );
  if( Result )
    return Result;

  return inherited::GetFunction( function_name );
}
//------------------------------------------------------------------------------
inline void CTSLBasicGenericRealMatrix::SendStartCommand()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slbasicgenericrealmatrix@TSLBasicGenericRealMatrix@SendStartCommand$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicGenericRealMatrix::SendStopCommand()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slbasicgenericrealmatrix@TSLBasicGenericRealMatrix@SendStopCommand$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
inline void CTSLBasicGenericRealMatrix::ClearQueue()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Slbasicgenericrealmatrix@TSLBasicGenericRealMatrix@ClearQueue$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      pop  eax
      }
    }

}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#pragma optimize( "", on )
#endif   // CSLBasicGenericRealMatrixCode_H_
//------------------------------------------------------------------------------
