//------------------------------------------------------------------------------
//
//                   Generated by VCL C++/C#.NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2011
//                              www.mitov.com
//
//------------------------------------------------------------------------------

#ifndef CILSegmentGauge_H_
#define CILSegmentGauge_H_

//------------------------------------------------------------------------------
#ifndef VCLSupportH
  #include <VCLSupport.h>
#endif

#ifndef CInstrumentLabPkgRAD_H_
  #include <CInstrumentLabPkgRAD.h>
#endif
#ifndef CILBasicInstrument_H_
  #include <CILBasicInstrument.h>
#endif
#ifndef CILAnalogInstrument_H_
  #include <CILAnalogInstrument.h>
#endif
#ifndef CULBasicControl_H_
  #include <CULBasicControl.h>
#endif
#ifndef CILSegmentIndicator_H_
  #include <CILSegmentIndicator.h>
#endif
#ifndef CSLControlCollection_H_
  #include <CSLControlCollection.h>
#endif
#ifndef CSLComponentCollection_H_
  #include <CSLComponentCollection.h>
#endif
//------------------------------------------------------------------------------




//------------------------------------------------------------------------------
class CTILSegmentGaugeDigits : public CTULBasicControlProperty
{
//DOM-IGNORE-BEGIN
  typedef CTULBasicControlProperty inherited;
//DOM-IGNORE-END

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name )
  {
    TLPFunctionEntry Result = VCL_GetFunction( ::Get_InstrumentLabPkgRAD(), function_name );
    if( Result )
      return Result;

    return inherited::GetFunction( function_name );
  }

public:    // Properties
  CLPProperty<unsigned int> NumberDigits;
  CLPProperty<bool> AutoSize;
  CLPProperty<unsigned int> Base;

public:
  CTILSegmentGaugeDigits( CLPBaseComponent *a_control, const CLPString a_PropertyName );
  CTILSegmentGaugeDigits( CLPClassProperty *a_property, const CLPString a_PropertyName );
  CTILSegmentGaugeDigits( CLPClassProperty *a_property, CTILSegmentGaugeDigits ( CLPBaseClass::*a_getter )() );
  CTILSegmentGaugeDigits( CLPClassProperty *a_property, CTILSegmentGaugeDigits ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILSegmentGaugeDigits ) );
  CTILSegmentGaugeDigits( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTILSegmentGaugeDigits ) );
  CTILSegmentGaugeDigits( CLPBaseComponent *a_control, CTILSegmentGaugeDigits ( CLPBaseClass::*a_getter )() );
  CTILSegmentGaugeDigits( CLPBaseComponent *a_control, CTILSegmentGaugeDigits ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILSegmentGaugeDigits ) );
  CTILSegmentGaugeDigits( VCLHANDLE handle, ELPHandleMode owns_handle = hmNone );
  CTILSegmentGaugeDigits( const CTILSegmentGaugeDigits &other );

public:
  CTILSegmentGaugeDigits & operator = ( const CTILSegmentGaugeDigits & other );

public:
  virtual VCLHANDLE Get_VCL_Handle() const;

protected:
  CLPBaseClass        *m_Owner_Property;
  CTILSegmentGaugeDigits ( CLPBaseClass::*m_Property_Getter )();
  void ( CLPBaseClass::*m_Property_Setter )( CTILSegmentGaugeDigits Value );
};
//------------------------------------------------------------------------------
class CTILSignSegmentOffsets : public CTULElementOffsets
{
//DOM-IGNORE-BEGIN
  typedef CTULElementOffsets inherited;
//DOM-IGNORE-END

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name )
  {
    TLPFunctionEntry Result = VCL_GetFunction( ::Get_InstrumentLabPkgRAD(), function_name );
    if( Result )
      return Result;

    return inherited::GetFunction( function_name );
  }

public:    // Class Properties
  class CTULElementSize &Separation;

public:
  CTILSignSegmentOffsets( CLPBaseComponent *a_control, const CLPString a_PropertyName );
  CTILSignSegmentOffsets( CLPClassProperty *a_property, const CLPString a_PropertyName );
  CTILSignSegmentOffsets( CLPClassProperty *a_property, CTILSignSegmentOffsets ( CLPBaseClass::*a_getter )() );
  CTILSignSegmentOffsets( CLPClassProperty *a_property, CTILSignSegmentOffsets ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILSignSegmentOffsets ) );
  CTILSignSegmentOffsets( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTILSignSegmentOffsets ) );
  CTILSignSegmentOffsets( CLPBaseComponent *a_control, CTILSignSegmentOffsets ( CLPBaseClass::*a_getter )() );
  CTILSignSegmentOffsets( CLPBaseComponent *a_control, CTILSignSegmentOffsets ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILSignSegmentOffsets ) );
  CTILSignSegmentOffsets( VCLHANDLE handle, ELPHandleMode owns_handle = hmNone );
  CTILSignSegmentOffsets( const CTILSignSegmentOffsets &other );
  virtual ~CTILSignSegmentOffsets();

public:
  CTILSignSegmentOffsets & operator = ( const CTILSignSegmentOffsets & other );

public:
  virtual VCLHANDLE Get_VCL_Handle() const;

protected:
  CLPBaseClass        *m_Owner_Property;
  CTILSignSegmentOffsets ( CLPBaseClass::*m_Property_Getter )();
  void ( CLPBaseClass::*m_Property_Setter )( CTILSignSegmentOffsets Value );
};
//------------------------------------------------------------------------------
class CTILSignSegment : public CTULOptionalInstrumentProperty
{
//DOM-IGNORE-BEGIN
  typedef CTULOptionalInstrumentProperty inherited;
//DOM-IGNORE-END

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name )
  {
    TLPFunctionEntry Result = VCL_GetFunction( ::Get_InstrumentLabPkgRAD(), function_name );
    if( Result )
      return Result;

    return inherited::GetFunction( function_name );
  }

public:    // Class Properties
  class CTULElementSize &Size;
  class CTULElementSize &Length;
  class CTULElementSize &Width;
  class CTILSignSegmentOffsets &Offsets;

public:    // Properties
  CLPProperty<bool> ShowPlus;

public:
  CTILSignSegment( CLPBaseComponent *a_control, const CLPString a_PropertyName );
  CTILSignSegment( CLPClassProperty *a_property, const CLPString a_PropertyName );
  CTILSignSegment( CLPClassProperty *a_property, CTILSignSegment ( CLPBaseClass::*a_getter )() );
  CTILSignSegment( CLPClassProperty *a_property, CTILSignSegment ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILSignSegment ) );
  CTILSignSegment( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTILSignSegment ) );
  CTILSignSegment( CLPBaseComponent *a_control, CTILSignSegment ( CLPBaseClass::*a_getter )() );
  CTILSignSegment( CLPBaseComponent *a_control, CTILSignSegment ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILSignSegment ) );
  CTILSignSegment( VCLHANDLE handle, ELPHandleMode owns_handle = hmNone );
  CTILSignSegment( const CTILSignSegment &other );
  virtual ~CTILSignSegment();

public:
  CTILSignSegment & operator = ( const CTILSignSegment & other );

public:
  virtual VCLHANDLE Get_VCL_Handle() const;

protected:
  CLPBaseClass        *m_Owner_Property;
  CTILSignSegment ( CLPBaseClass::*m_Property_Getter )();
  void ( CLPBaseClass::*m_Property_Setter )( CTILSignSegment Value );
};
//------------------------------------------------------------------------------
class CTILBasicSegmentGauge : public CTILCustomizableSegmentIndicator
{
//DOM-IGNORE-BEGIN
  typedef CTILCustomizableSegmentIndicator inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // Class Properties
  class CTILSegmentGaugeDigits &Digits;
  class CTILScalePrecision &Precision;
  class CTILSignSegment &Sign;
  class CTLPGaugeComponentElements &Elements;

public:    // Properties
  CLPProperty<bool> LeadingZero;

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILBasicSegmentGauge();
  virtual ~CTILBasicSegmentGauge();
};
//------------------------------------------------------------------------------
class CTILSegmentGauge : public CTILBasicSegmentGauge
{
//DOM-IGNORE-BEGIN
  typedef CTILBasicSegmentGauge inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // OpenWire Pins
  CTOWInputPinProperty InputPin;

public:    // Properties
  CLPProperty<double> Value;
  CLPProperty<double> Max;
  CLPProperty<double> Min;

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILSegmentGauge( HWND hParent );
  CTILSegmentGauge();
};
//------------------------------------------------------------------------------
class CTILSegmentGaugeLayer : public CTILSegmentGauge
{
//DOM-IGNORE-BEGIN
  typedef CTILSegmentGauge inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILSegmentGaugeLayer( HWND hParent );
  CTILSegmentGaugeLayer();
};
//------------------------------------------------------------------------------
class CTILBasicSegmentGaugeElement : public CTILBasicSegmentGauge
{
//DOM-IGNORE-BEGIN
  typedef CTILBasicSegmentGauge inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

};
//------------------------------------------------------------------------------
class CTILSegmentGaugeElement : public CTILBasicSegmentGaugeElement
{
//DOM-IGNORE-BEGIN
  typedef CTILBasicSegmentGaugeElement inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // Class Properties
  class CTULElementOffsets &Position;
  class CTULElement2DSize &Size;

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILSegmentGaugeElement( HWND hParent );
  CTILSegmentGaugeElement();
  virtual ~CTILSegmentGaugeElement();
};
//------------------------------------------------------------------------------
class CTILExternalSegmentGaugeElement : public CTILSegmentGauge
{
//DOM-IGNORE-BEGIN
  typedef CTILSegmentGauge inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // Class Properties
  class CTULElementOffsets &Position;
  class CTULElement2DSize &Size;

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILExternalSegmentGaugeElement( HWND hParent );
  CTILExternalSegmentGaugeElement();
  virtual ~CTILExternalSegmentGaugeElement();
};
//------------------------------------------------------------------------------
class CTILExternalSegmentGaugeMatrixLayer : public CTILExternalSegmentGaugeElement
{
//DOM-IGNORE-BEGIN
  typedef CTILExternalSegmentGaugeElement inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILExternalSegmentGaugeMatrixLayer( HWND hParent );
  CTILExternalSegmentGaugeMatrixLayer();
};
//------------------------------------------------------------------------------
#include <CILSegmentGaugeCode.h>
//------------------------------------------------------------------------------
#endif   // CILSegmentGauge_H_
//------------------------------------------------------------------------------
