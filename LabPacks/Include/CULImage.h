//------------------------------------------------------------------------------
//
//                   Generated by VCL C++/C#.NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2011
//                              www.mitov.com
//
//------------------------------------------------------------------------------

#ifndef CULImage_H_
#define CULImage_H_

//------------------------------------------------------------------------------
#ifndef VCLSupportH
  #include <VCLSupport.h>
#endif

#ifndef CUserLabBasicPkgRAD_H_
  #include <CUserLabBasicPkgRAD.h>
#endif
#ifndef CULBasicControl_H_
  #include <CULBasicControl.h>
#endif
#ifndef CLPTransparentControl_H_
  #include <CLPTransparentControl.h>
#endif
#ifndef CSLControlCollection_H_
  #include <CSLControlCollection.h>
#endif
#ifndef CLPGDIPlusProperties_H_
  #include <CLPGDIPlusProperties.h>
#endif
#ifndef CLPDrawLayers_H_
  #include <CLPDrawLayers.h>
#endif
//------------------------------------------------------------------------------




//------------------------------------------------------------------------------
class CTULImage : public CTULBasicControl
{
//DOM-IGNORE-BEGIN
  typedef CTULBasicControl inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // Class Properties
  class CTLPGPImage &Picture;

public:    // Properties
  CLPProperty<bool> Stretched;
  CLPProperty<bool> Proportional;
  CLPProperty<CTColor> Color;
  CLPProperty<bool> AntiAlias;

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTULImage( HWND hParent );
  CTULImage();
  virtual ~CTULImage();
};
//------------------------------------------------------------------------------
class CTULImageLayer : public CTULImage
{
//DOM-IGNORE-BEGIN
  typedef CTULImage inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTULImageLayer( HWND hParent );
  CTULImageLayer();
};
//------------------------------------------------------------------------------
class CTULImageElement : public CTULImage
{
//DOM-IGNORE-BEGIN
  typedef CTULImage inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // Class Properties
  class CTULElementOffsets &Position;
  class CTULElement2DSize &Size;

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTULImageElement( HWND hParent );
  CTULImageElement();
  virtual ~CTULImageElement();
};
//------------------------------------------------------------------------------
class CTULImageMatrixLayer : public CTULImageElement
{
//DOM-IGNORE-BEGIN
  typedef CTULImageElement inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTULImageMatrixLayer( HWND hParent );
  CTULImageMatrixLayer();
};
//------------------------------------------------------------------------------
#include <CULImageCode.h>
//------------------------------------------------------------------------------
#endif   // CULImage_H_
//------------------------------------------------------------------------------
