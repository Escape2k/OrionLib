//------------------------------------------------------------------------------
//
//                   Generated by VCL C++/C#.NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2011
//                              www.mitov.com
//
//------------------------------------------------------------------------------

#ifndef CILMatrixDisplay_H_
#define CILMatrixDisplay_H_

//------------------------------------------------------------------------------
#ifndef VCLSupportH
  #include <VCLSupport.h>
#endif

#ifndef CInstrumentLabPkgRAD_H_
  #include <CInstrumentLabPkgRAD.h>
#endif
#ifndef CILBasicInstrument_H_
  #include <CILBasicInstrument.h>
#endif
#ifndef CULBasicControl_H_
  #include <CULBasicControl.h>
#endif
#ifndef CSLControlCollection_H_
  #include <CSLControlCollection.h>
#endif
#ifndef CLPDrawLayers_H_
  #include <CLPDrawLayers.h>
#endif
#ifndef CSLComponentCollection_H_
  #include <CSLComponentCollection.h>
#endif
#ifndef CLPComponent_H_
  #include <CLPComponent.h>
#endif
#ifndef CLPGDIPlusProperties_H_
  #include <CLPGDIPlusProperties.h>
#endif
//------------------------------------------------------------------------------

enum CTILSegmentShape { ssEllipse, ssRectangle, ssRoundRectangle };



//------------------------------------------------------------------------------
class CTILMatrixSegmnt : public CTULBasicControlProperty
{
//DOM-IGNORE-BEGIN
  typedef CTULBasicControlProperty inherited;
//DOM-IGNORE-END

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name )
  {
    TLPFunctionEntry Result = VCL_GetFunction( ::Get_InstrumentLabPkgRAD(), function_name );
    if( Result )
      return Result;

    return inherited::GetFunction( function_name );
  }

public:    // Class Properties
  class CTULElementSize &Size;
  class CTULElementSize &CornerRadius;

public:    // Properties
  CLPEnumProperty<CTILSegmentShape> Shape;
  CLPProperty<bool> Proportional;
  CLPProperty<bool> ShowReflection;

public:
  CTILMatrixSegmnt( CLPBaseComponent *a_control, const CLPString a_PropertyName );
  CTILMatrixSegmnt( CLPClassProperty *a_property, const CLPString a_PropertyName );
  CTILMatrixSegmnt( CLPClassProperty *a_property, CTILMatrixSegmnt ( CLPBaseClass::*a_getter )() );
  CTILMatrixSegmnt( CLPClassProperty *a_property, CTILMatrixSegmnt ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILMatrixSegmnt ) );
  CTILMatrixSegmnt( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTILMatrixSegmnt ) );
  CTILMatrixSegmnt( CLPBaseComponent *a_control, CTILMatrixSegmnt ( CLPBaseClass::*a_getter )() );
  CTILMatrixSegmnt( CLPBaseComponent *a_control, CTILMatrixSegmnt ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTILMatrixSegmnt ) );
  CTILMatrixSegmnt( VCLHANDLE handle, ELPHandleMode owns_handle = hmNone );
  CTILMatrixSegmnt( const CTILMatrixSegmnt &other );
  virtual ~CTILMatrixSegmnt();

public:
  CTILMatrixSegmnt & operator = ( const CTILMatrixSegmnt & other );

public:
  virtual VCLHANDLE Get_VCL_Handle() const;

protected:
  CLPBaseClass        *m_Owner_Property;
  CTILMatrixSegmnt ( CLPBaseClass::*m_Property_Getter )();
  void ( CLPBaseClass::*m_Property_Setter )( CTILMatrixSegmnt Value );
};
//------------------------------------------------------------------------------
class CTILMatrixDisplay : public CTULBasicControl
{
//DOM-IGNORE-BEGIN
  typedef CTULBasicControl inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // OpenWire Pins
  CTOWInputPinProperty RowInputPin;
  CTOWInputPinProperty ColInputPin;
  CTOWPinListProperty InputPins;

public:    // Class Properties
  class CTILMatrixSegmnt &Segmnts;
  class CTLPMatrixComponentElements &Layers;

public:    // Properties
  CLPProperty<unsigned int> Rows;
  CLPProperty<unsigned int> Cols;
  CLPProperty<unsigned int> Row;
  CLPProperty<unsigned int> Col;
  CLPProperty<CTGPColor> Color;
  CLPIndexProperty_2<CTILMatrixDisplay,int,int,CTGPColor> Pixels;

protected:
  CTGPColor GetPixel( int ACol, int ARow );
  void SetPixel( int ACol, int ARow, CTGPColor AValue );

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILMatrixDisplay( HWND hParent );
  CTILMatrixDisplay();
  virtual ~CTILMatrixDisplay();
};
//------------------------------------------------------------------------------
class CTILMatrixDisplayLayer : public CTILMatrixDisplay
{
//DOM-IGNORE-BEGIN
  typedef CTILMatrixDisplay inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILMatrixDisplayLayer( HWND hParent );
  CTILMatrixDisplayLayer();
};
//------------------------------------------------------------------------------
class CTILExternalMatrixDisplayElement : public CTILMatrixDisplay
{
//DOM-IGNORE-BEGIN
  typedef CTILMatrixDisplay inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // Class Properties
  class CTULElementOffsets &Position;
  class CTULElement2DSize &Size;

public:

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILExternalMatrixDisplayElement( HWND hParent );
  CTILExternalMatrixDisplayElement();
  virtual ~CTILExternalMatrixDisplayElement();
};
//------------------------------------------------------------------------------
class CTILExternalMatrixDisplayMatrixLayer : public CTILExternalMatrixDisplayElement
{
//DOM-IGNORE-BEGIN
  typedef CTILExternalMatrixDisplayElement inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:
  virtual void Open( HWND hParent );
  virtual void Open( CLPControl &Parent );

public:
  CTILExternalMatrixDisplayMatrixLayer( HWND hParent );
  CTILExternalMatrixDisplayMatrixLayer();
};
//------------------------------------------------------------------------------
class CTILTextMatrixLayer : public CTLPBasicMatrixElement
{
//DOM-IGNORE-BEGIN
  typedef CTLPBasicMatrixElement inherited;
//DOM-IGNORE-END

  VCLHANDLE LibraryHandle;

protected:
  virtual TLPFunctionEntry  GetFunction( const char *function_name );

public:    // Class Properties
  class CTULControlFont &Font;

public:    // Properties
  CLPProperty<CTString> Text;
  CLPProperty<bool> AntiAlias;

public:
  CTILTextMatrixLayer();
  virtual ~CTILTextMatrixLayer();
};
//------------------------------------------------------------------------------
#include <CILMatrixDisplayCode.h>
//------------------------------------------------------------------------------
#endif   // CILMatrixDisplay_H_
//------------------------------------------------------------------------------
