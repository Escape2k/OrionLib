//------------------------------------------------------------------------------
//
//                   Generated by VCL C++/C#.NET FrontEnd.
//                   (C)Copyright Boian Mitov 2005 - 2011
//                              www.mitov.com
//
//------------------------------------------------------------------------------

#ifndef CLPComponentCode_H_
#define CLPComponentCode_H_

#pragma optimize( "", off )
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( CLPClassProperty *a_property, CTLPOptionalDisabledPersistent ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( CLPClassProperty *a_property, CTLPOptionalDisabledPersistent ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalDisabledPersistent ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPOptionalDisabledPersistent ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( CLPBaseComponent *a_control, CTLPOptionalDisabledPersistent ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( CLPBaseComponent *a_control, CTLPOptionalDisabledPersistent ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalDisabledPersistent ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent::CTLPOptionalDisabledPersistent( const CTLPOptionalDisabledPersistent &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalDisabledPersistent & CTLPOptionalDisabledPersistent::operator = ( const CTLPOptionalDisabledPersistent & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPOptionalDisabledPersistent::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( CLPClassProperty *a_property, CTLPOptionalEnabledPersistent ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( CLPClassProperty *a_property, CTLPOptionalEnabledPersistent ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalEnabledPersistent ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPOptionalEnabledPersistent ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( CLPBaseComponent *a_control, CTLPOptionalEnabledPersistent ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( CLPBaseComponent *a_control, CTLPOptionalEnabledPersistent ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalEnabledPersistent ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent::CTLPOptionalEnabledPersistent( const CTLPOptionalEnabledPersistent &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalEnabledPersistent & CTLPOptionalEnabledPersistent::operator = ( const CTLPOptionalEnabledPersistent & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPOptionalEnabledPersistent::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( CLPClassProperty *a_property, CTLPOptionalSettingProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( CLPClassProperty *a_property, CTLPOptionalSettingProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalSettingProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPOptionalSettingProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( CLPBaseComponent *a_control, CTLPOptionalSettingProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( CLPBaseComponent *a_control, CTLPOptionalSettingProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalSettingProperty ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty::CTLPOptionalSettingProperty( const CTLPOptionalSettingProperty &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  UseCurrent( GetInstance(), _T( "UseCurrent" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalSettingProperty & CTLPOptionalSettingProperty::operator = ( const CTLPOptionalSettingProperty & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPOptionalSettingProperty::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( CLPClassProperty *a_property, CTLPOptionalVisibilityProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( CLPClassProperty *a_property, CTLPOptionalVisibilityProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalVisibilityProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPOptionalVisibilityProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( CLPBaseComponent *a_control, CTLPOptionalVisibilityProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( CLPBaseComponent *a_control, CTLPOptionalVisibilityProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalVisibilityProperty ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty::CTLPOptionalVisibilityProperty( const CTLPOptionalVisibilityProperty &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Visible( GetInstance(), _T( "Visible" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalVisibilityProperty & CTLPOptionalVisibilityProperty::operator = ( const CTLPOptionalVisibilityProperty & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPOptionalVisibilityProperty::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( CLPClassProperty *a_property, CTLPPointProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( CLPClassProperty *a_property, CTLPPointProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPPointProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPPointProperty ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( CLPBaseComponent *a_control, CTLPPointProperty ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( CLPBaseComponent *a_control, CTLPPointProperty ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPPointProperty ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty::CTLPPointProperty( const CTLPPointProperty &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  X( GetInstance(), _T( "X" ) ),
  Y( GetInstance(), _T( "Y" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPPointProperty & CTLPPointProperty::operator = ( const CTLPPointProperty & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPPointProperty::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( CLPClassProperty *a_property, CTLPMasterPumping ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( CLPClassProperty *a_property, CTLPMasterPumping ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPMasterPumping ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPMasterPumping ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( CLPBaseComponent *a_control, CTLPMasterPumping ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( CLPBaseComponent *a_control, CTLPMasterPumping ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPMasterPumping ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping::CTLPMasterPumping( const CTLPMasterPumping &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) ),
  Priority( GetInstance(), _T( "Priority" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPMasterPumping & CTLPMasterPumping::operator = ( const CTLPMasterPumping & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPMasterPumping::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( CLPClassProperty *a_property, CTLPDefaultEnabledMasterPumping ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( CLPClassProperty *a_property, CTLPDefaultEnabledMasterPumping ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPDefaultEnabledMasterPumping ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPDefaultEnabledMasterPumping ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( CLPBaseComponent *a_control, CTLPDefaultEnabledMasterPumping ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( CLPBaseComponent *a_control, CTLPDefaultEnabledMasterPumping ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPDefaultEnabledMasterPumping ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping::CTLPDefaultEnabledMasterPumping( const CTLPDefaultEnabledMasterPumping &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPDefaultEnabledMasterPumping & CTLPDefaultEnabledMasterPumping::operator = ( const CTLPDefaultEnabledMasterPumping & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPDefaultEnabledMasterPumping::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( CLPClassProperty *a_property, CTLPNamedCollectionItem ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( CLPClassProperty *a_property, CTLPNamedCollectionItem ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPNamedCollectionItem ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPNamedCollectionItem ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( CLPBaseComponent *a_control, CTLPNamedCollectionItem ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( CLPBaseComponent *a_control, CTLPNamedCollectionItem ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPNamedCollectionItem ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem::CTLPNamedCollectionItem( const CTLPNamedCollectionItem &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Name( GetInstance(), _T( "Name" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPNamedCollectionItem & CTLPNamedCollectionItem::operator = ( const CTLPNamedCollectionItem & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPNamedCollectionItem::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( CLPClassProperty *a_property, CTLPOptionalNamedCollectionItem ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( CLPClassProperty *a_property, CTLPOptionalNamedCollectionItem ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalNamedCollectionItem ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPOptionalNamedCollectionItem ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( CLPBaseComponent *a_control, CTLPOptionalNamedCollectionItem ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( CLPBaseComponent *a_control, CTLPOptionalNamedCollectionItem ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPOptionalNamedCollectionItem ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem::CTLPOptionalNamedCollectionItem( const CTLPOptionalNamedCollectionItem &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Enabled( GetInstance(), _T( "Enabled" ) )
{
}
//------------------------------------------------------------------------------
inline CTLPOptionalNamedCollectionItem & CTLPOptionalNamedCollectionItem::operator = ( const CTLPOptionalNamedCollectionItem & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPOptionalNamedCollectionItem::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( CLPClassProperty *a_property, CTLPObjectList ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( CLPClassProperty *a_property, CTLPObjectList ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPObjectList ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPObjectList ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( CLPBaseComponent *a_control, CTLPObjectList ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( CLPBaseComponent *a_control, CTLPObjectList ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPObjectList ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList::CTLPObjectList( const CTLPObjectList &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  Count( (CTLPObjectList *)GetInstance(), &CTLPObjectList::GetCountProp)
{
}
//------------------------------------------------------------------------------
inline CTLPObjectList & CTLPObjectList::operator = ( const CTLPObjectList & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPObjectList::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline int CTLPObjectList::GetCountProp()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Lpcomponent@TLPObjectList@GetCountProp$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  int __0_RtnValue_ = (int)0;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (int)__0_RtnValue_;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( CLPBaseComponent *a_control, const CLPString a_PropertyName ) :
  inherited( a_control, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( CLPClassProperty *a_property, const CLPString a_PropertyName ) :
  inherited( a_property, a_PropertyName ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( CLPClassProperty *a_property, CTLPLanguage ( CLPBaseClass::*a_getter )() ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_property),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( CLPClassProperty *a_property, CTLPLanguage ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPLanguage ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( CLPClassProperty *a_property, void ( CLPBaseClass::*a_setter )( CTLPLanguage ) ) :
  inherited( a_property, _T( "-" ) ),
  m_Property_Getter(NULL),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_property),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( CLPBaseComponent *a_control, CTLPLanguage ( CLPBaseClass::*a_getter )() ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(NULL),
  m_Owner_Property(a_control),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( CLPBaseComponent *a_control, CTLPLanguage ( CLPBaseClass::*a_getter )(), void ( CLPBaseClass::*a_setter )( CTLPLanguage ) ) :
  inherited( a_control, _T( "-" ) ),
  m_Property_Getter(a_getter),
  m_Property_Setter(a_setter),
  m_Owner_Property(a_control),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( VCLHANDLE handle, ELPHandleMode owns_handle ) :
  inherited( handle, owns_handle ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage::CTLPLanguage( const CTLPLanguage &other ) :
  inherited( other ),
  m_Property_Getter( NULL ),
  m_Property_Setter( NULL ),
  m_Owner_Property( NULL ),
  ID( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetID),
  LocalizedName( (CTLPLanguage *)GetInstance(), &CTLPLanguage::GetLocalizedName)
{
}
//------------------------------------------------------------------------------
inline CTLPLanguage & CTLPLanguage::operator = ( const CTLPLanguage & other )
{
  if( m_Property_Setter )
	  (m_Owner_Property->*m_Property_Setter)( other );

  else
	  inherited::operator = ( other );

  return *this;
}
//------------------------------------------------------------------------------
inline VCLHANDLE CTLPLanguage::Get_VCL_Handle() const
{
  if( m_Property_Getter )
	  {
		if( ! m_Object )
		  m_Object = new CVCLObject( (m_Owner_Property->*m_Property_Getter)().Get_VCL_Handle() );

	  }

  return inherited::Get_VCL_Handle();
}
//------------------------------------------------------------------------------
inline LCID CTLPLanguage::GetID()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Lpcomponent@TLPLanguage@GetID$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  LCID __0_RtnValue_ = (LCID)0;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    _asm
      {
      push eax
      mov  eax,dword ptr [ __0_ThisPtr_ ]
      call dword ptr [ __0_FuncPtr_ ]
      mov  __0_RtnValue_,eax
      pop  eax
      }
    }

  return (LCID)__0_RtnValue_;
}
//------------------------------------------------------------------------------
inline CTString CTLPLanguage::GetLocalizedName()
{
  static void *__0_FuncPtr_ = NULL;
  if( __0_FuncPtr_ == NULL )
    __0_FuncPtr_ = (void *)( GetFunction( "@Lpcomponent@TLPLanguage@GetLocalizedName$qqrv" ));

  VCLHANDLE __0_ThisPtr_ = Get_VCL_FunctionHandle();

  CTString __0_RtnValue_;

  if( __0_FuncPtr_ && __0_ThisPtr_ )
    {
    VCLHANDLE __0_RtnValue_TMP_ = ::VCL_CallUnicodeStringGetMember( __0_ThisPtr_, (VCLHANDLE)__0_FuncPtr_ );
    if( __0_RtnValue_TMP_ )
      {
      __0_RtnValue_ = ::VCL_GetUnicodeCString( __0_RtnValue_TMP_ );
      VCL_DestroyUnicodeString( __0_RtnValue_TMP_ );
      }
    }

  return (CTString)__0_RtnValue_;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
#pragma optimize( "", on )
#endif   // CLPComponentCode_H_
//------------------------------------------------------------------------------
